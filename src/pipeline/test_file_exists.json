{
	"name": "test_file_exists",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Set Execution Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SourceFiles",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Set Execution Date",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "exucution_date",
					"value": {
						"value": "@coalesce(pipeline().parameters.run_date, formatDateTime(utcnow(),'yyyyMMdd'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set All Available Files",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "all_available_files",
					"value": {
						"value": "@replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Metadata').output.childItems),'[{',''),'}]',''),'{',''),'}',''),'\"type\":\"File\"',''),'\"',''),'name:',''),',,',',')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup Config",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set Execution Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ETLConfig",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Config').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item()['FileToLoad'],1)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach File",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set All Available Files Array_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set All Available Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('all_files_needed')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If All files Exists",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(variables('all_available_files'),concat(item()['FileNamePrefix'],variables('exucution_date'),'.csv'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "@concat(item()['FileNamePrefix'],variables('exucution_date'),'.csv', ' file not exists')",
												"type": "Expression"
											},
											"errorCode": "400"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Set All Available Files Array_copy1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "all_files_needed",
					"value": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"run_date": {
				"type": "string"
			}
		},
		"variables": {
			"exucution_date": {
				"type": "String"
			},
			"all_available_files": {
				"type": "String"
			},
			"all_files_needed": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-07-15T22:44:40Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}